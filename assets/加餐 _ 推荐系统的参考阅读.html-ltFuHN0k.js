import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,a as n,o as s}from"./app-d8EKP-K0.js";const r={};function i(d,a){return s(),h("div",null,a[0]||(a[0]=[n('<h1 id="加餐-推荐系统的参考阅读" tabindex="-1"><a class="header-anchor" href="#加餐-推荐系统的参考阅读"><span>加餐 _ 推荐系统的参考阅读</span></a></h1><p><audio id="audio" title="加餐 | 推荐系统的参考阅读" controls="" preload="none"><source id="mp3" src="https://static001.geekbang.org/resource/audio/51/db/5167fdb87e3a5450b0455d9c7acdf3db.mp3"></audio></p><p>专栏主体内容已经结束了，在专栏写作的过程中，我阅读了很多业界公开的资料，我觉得有必要整理出来，供想深入阅读的人继续去找虐。</p><p>整体来说，在选择参考文献时，我偏爱那些由公司发表的。因为推荐系统本质上还是一种非常依赖实践的算法应用方向，并且，这些商业公司论文中的技术内容也在他们实际的场景中经过了检验。</p><p>另外，更多的内容是来自我自己的大脑中，所以我在下面列出来的只是一部分，在经过反复删减之后，保留了这些，有中文有英文，一般来说英文居多。有较理论化的，如优化理论，更多的是较实践派，可以学完即用。这些资料分成这么几个类型。</p><ol><li>论文：以论文形式发表的，期刊数据库中可以下载到。</li><li>网络文章：就是在网上自由流传的内容或者博客，为了方便阅读，我将它们保存为PDF格式。</li><li>演示文稿：就是作者曾公开演讲过的内容，相对来说不是那么严谨，但是更容易理解。</li><li>书：推荐系统相关的书较少，我在专栏中参考过的书只有一本（附件中不提供书的电子文档）。</li></ol><p>以上的参考文献我按照章节顺序列在了下面，我还在后面附上一个推荐书单。你可以点击查看。</p><h2 id="原理篇" tabindex="-1"><a class="header-anchor" href="#原理篇"><span>原理篇</span></a></h2><h2 id="_1-内容推荐" tabindex="-1"><a class="header-anchor" href="#_1-内容推荐"><span>1.内容推荐</span></a></h2><h3>题目：Bag of Tricks for Efficient Text Classification</h3><h3 id="类型-论文" tabindex="-1"><a class="header-anchor" href="#类型-论文"><span><strong>类型</strong>：论文</span></a></h3><h3 id="作者-facebook" tabindex="-1"><a class="header-anchor" href="#作者-facebook"><span><strong>作者</strong>：Facebook</span></a></h3><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span><strong>说明</strong>：</span></a></h3><p>Facebook开源的文本处理工具fastText背后原理。可以训练词嵌入向量，文本多分类，效率和线性模型一样，效果和深度学习一样，值得拥有。</p><h3>**题目**：The Learning Behind Gmail Priority Inbox</h3><h3 id="类型-论文-1" tabindex="-1"><a class="header-anchor" href="#类型-论文-1"><span><strong>类型</strong>：论文</span></a></h3><h3 id="作者-google" tabindex="-1"><a class="header-anchor" href="#作者-google"><span><strong>作者</strong>：Google</span></a></h3><h3 id="说明-1" tabindex="-1"><a class="header-anchor" href="#说明-1"><span><strong>说明</strong>：</span></a></h3><p>介绍了一种基于文本和行为给用户建模的思路，是信息流推荐的早期探索，Gmail智能邮箱背后的原理。</p><h3>**题目**：Recommender Systems Handbook(第三章，第九章)</h3><h3 id="类型-书" tabindex="-1"><a class="header-anchor" href="#类型-书"><span><strong>类型</strong>：书</span></a></h3><h3 id="作者-francesco-ricci等" tabindex="-1"><a class="header-anchor" href="#作者-francesco-ricci等"><span><strong>作者</strong>：Francesco Ricci等</span></a></h3><h3 id="说明-2" tabindex="-1"><a class="header-anchor" href="#说明-2"><span><strong>说明</strong>：</span></a></h3><p>这本书收录了推荐系统很多经典论文，话题涵盖非常广，第三章专门讲内容推荐的基本原理，第九章是一个具体的基于内容推荐系统的案例。</p><h3>**题目**：文本上的算法</h3><h3 id="类型-网络文章-网络免费版-已有成书《文本上的算法-深入浅出自然语言处理》-内容更丰富" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-网络免费版-已有成书《文本上的算法-深入浅出自然语言处理》-内容更丰富"><span><strong>类型</strong>：网络文章(网络免费版，已有成书《文本上的算法:深入浅出自然语言处理》，内容更丰富)</span></a></h3><h3 id="作者-路彦雄" tabindex="-1"><a class="header-anchor" href="#作者-路彦雄"><span><strong>作者</strong>：路彦雄</span></a></h3><h3 id="说明-3" tabindex="-1"><a class="header-anchor" href="#说明-3"><span><strong>说明</strong>：</span></a></h3><p>介绍了文本挖掘中常用的算法，及基础概念。内容涉及概率论，信息论，文本分类，聚类，深度学习，推荐系统等。</p><h3>题目：LDA数学八卦</h3><h3 id="类型-网络文章" tabindex="-1"><a class="header-anchor" href="#类型-网络文章"><span>类型：网络文章</span></a></h3><h3 id="作者-rickjin-靳志辉" tabindex="-1"><a class="header-anchor" href="#作者-rickjin-靳志辉"><span>作者：Rickjin(@靳志辉)</span></a></h3><h3 id="说明-4" tabindex="-1"><a class="header-anchor" href="#说明-4"><span>说明：</span></a></h3><p>由浅入深地讲解LDA原理，对于实际LDA工具的使用有非常大的帮助。</p><h2 id="_2-近邻推荐" tabindex="-1"><a class="header-anchor" href="#_2-近邻推荐"><span>2.近邻推荐</span></a></h2><h3>题目：Amazon.com recommendations: item-to-item collaborative filtering</h3><h3 id="类型-论文-2" tabindex="-1"><a class="header-anchor" href="#类型-论文-2"><span>类型：论文</span></a></h3><h3 id="作者-amazon" tabindex="-1"><a class="header-anchor" href="#作者-amazon"><span>作者：Amazon</span></a></h3><h3 id="说明-5" tabindex="-1"><a class="header-anchor" href="#说明-5"><span>说明：</span></a></h3><p>介绍Amazon的推荐系统原理，主要是介绍Item-Based协同过滤算法。</p><h3>题目：Slope One Predictors for Online Rating-Based Collaborative Filtering</h3><h3 id="类型-论文-3" tabindex="-1"><a class="header-anchor" href="#类型-论文-3"><span>类型：论文</span></a></h3><h3 id="作者-daniel-lemire等" tabindex="-1"><a class="header-anchor" href="#作者-daniel-lemire等"><span>作者：Daniel Lemire等</span></a></h3><h3 id="说明-6" tabindex="-1"><a class="header-anchor" href="#说明-6"><span>说明：</span></a></h3><p>Slope One算法。</p><h3>题目：Item-Based Collaborative Filtering Recommendation Algorithms</h3><h3 id="类型-论文-4" tabindex="-1"><a class="header-anchor" href="#类型-论文-4"><span>类型：论文</span></a></h3><h3 id="作者-badrul-sarwar等" tabindex="-1"><a class="header-anchor" href="#作者-badrul-sarwar等"><span>作者：Badrul Sarwar等</span></a></h3><h3 id="说明-7" tabindex="-1"><a class="header-anchor" href="#说明-7"><span>说明：</span></a></h3><p>GroupLens的研究团队对比了不同的Item-to-Item的推荐算法。</p><h3>题目：Collaborative Recommendations Using Item-to-Item Similarity Mappings</h3><h3 id="类型-专利" tabindex="-1"><a class="header-anchor" href="#类型-专利"><span>类型：专利</span></a></h3><h3 id="作者-amazon-1" tabindex="-1"><a class="header-anchor" href="#作者-amazon-1"><span>作者：Amazon</span></a></h3><h3 id="说明-8" tabindex="-1"><a class="header-anchor" href="#说明-8"><span>说明：</span></a></h3><p>是的，Amazon申请了Item-Based算法的专利，所以如果在美上市企业，小心用这个算法。</p><h3>题目：Recommender Systems Handbook（第4章）</h3><h3 id="类型-书-1" tabindex="-1"><a class="header-anchor" href="#类型-书-1"><span>类型：书</span></a></h3><h3 id="作者-francesco-ricci等-1" tabindex="-1"><a class="header-anchor" href="#作者-francesco-ricci等-1"><span>作者：Francesco Ricci等</span></a></h3><h3 id="说明-9" tabindex="-1"><a class="header-anchor" href="#说明-9"><span>说明：</span></a></h3><p>第四章综述性地讲了近邻推荐，也就是基础协同过滤算法。</p><h2 id="_3-矩阵分解" tabindex="-1"><a class="header-anchor" href="#_3-矩阵分解"><span>3.矩阵分解</span></a></h2><h3>题目：Matrix Factorization and Collaborative Filtering</h3><h3 id="类型-演示文稿" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿"><span>类型：演示文稿</span></a></h3><h3 id="作者-daryl-lim" tabindex="-1"><a class="header-anchor" href="#作者-daryl-lim"><span>作者：Daryl Lim</span></a></h3><h3 id="说明-10" tabindex="-1"><a class="header-anchor" href="#说明-10"><span>说明：</span></a></h3><p>从PCA这种传统的数据降维方法讲起，综述了矩阵分解和协同过滤算法。矩阵分解也是一种降维方法。</p><h3>题目：Factorization Meets the Neighborhood: a Multifaceted Collaborative Filtering Model</h3><h3 id="类型-论文-5" tabindex="-1"><a class="header-anchor" href="#类型-论文-5"><span>类型：论文</span></a></h3><h3 id="作者-yehuda-koren" tabindex="-1"><a class="header-anchor" href="#作者-yehuda-koren"><span>作者：Yehuda Koren</span></a></h3><h3 id="说明-11" tabindex="-1"><a class="header-anchor" href="#说明-11"><span>说明：</span></a></h3><p>把矩阵分解和近邻模型融合在一起。</p><h3>题目：BPR- Bayesian Personalized Ranking from Implicit Feedback</h3><h3 id="类型-论文-6" tabindex="-1"><a class="header-anchor" href="#类型-论文-6"><span>类型：论文</span></a></h3><h3 id="作者-steffen-rendle等" tabindex="-1"><a class="header-anchor" href="#作者-steffen-rendle等"><span>作者：Steffen Rendle等</span></a></h3><h3 id="说明-12" tabindex="-1"><a class="header-anchor" href="#说明-12"><span>说明：</span></a></h3><p>更关注推荐结果的排序好坏，而不是评分预测精度，那么BPR模型可能是首选，本篇是出处。</p><h3>题目：Collaborative Filtering for Implicit Feedback Datasets</h3><h3 id="类型-论文-7" tabindex="-1"><a class="header-anchor" href="#类型-论文-7"><span>类型：论文</span></a></h3><h3 id="作者-yifan-hu等" tabindex="-1"><a class="header-anchor" href="#作者-yifan-hu等"><span>作者：Yifan Hu等</span></a></h3><h3 id="说明-13" tabindex="-1"><a class="header-anchor" href="#说明-13"><span>说明：</span></a></h3><p>不同于通常矩阵分解处理的都是评分数据这样的显式反馈，本文介绍一种处理点击等隐式反馈数据的矩阵分解模型。</p><h3>题目：Matrix Factorization Techniques For Recommender Systems</h3><h3 id="类型-论文-8" tabindex="-1"><a class="header-anchor" href="#类型-论文-8"><span>类型：论文</span></a></h3><h3 id="作者-yehuda-koren等" tabindex="-1"><a class="header-anchor" href="#作者-yehuda-koren等"><span>作者：Yehuda Koren等</span></a></h3><h3 id="说明-14" tabindex="-1"><a class="header-anchor" href="#说明-14"><span>说明：</span></a></h3><p>本文是大神Yehuda Koren对矩阵分解在推荐系统中的应用做的一个普及性介绍，值得一读。</p><h3>题目：The BellKor Solution to the Netflix Grand Prize</h3><h3 id="类型-论文-9" tabindex="-1"><a class="header-anchor" href="#类型-论文-9"><span>类型：论文</span></a></h3><h3 id="作者-yehuda-koren-1" tabindex="-1"><a class="header-anchor" href="#作者-yehuda-koren-1"><span>作者：Yehuda Koren</span></a></h3><h3 id="说明-15" tabindex="-1"><a class="header-anchor" href="#说明-15"><span>说明：</span></a></h3><p>也是一篇综述，或者说教程，针对Netflix Prize的。</p><h2 id="_4-模型融合" tabindex="-1"><a class="header-anchor" href="#_4-模型融合"><span>4.模型融合</span></a></h2><h3>题目：Adaptive Bound Optimization for Online Convex Optimization</h3><h3 id="类型-论文-10" tabindex="-1"><a class="header-anchor" href="#类型-论文-10"><span>类型：论文</span></a></h3><h3 id="作者-google-1" tabindex="-1"><a class="header-anchor" href="#作者-google-1"><span>作者：Google</span></a></h3><h3 id="说明-16" tabindex="-1"><a class="header-anchor" href="#说明-16"><span>说明：</span></a></h3><p>FTRL是CTR预估常用的优化算法，本文介绍FTRL算法原理。</p><h3>题目：在线最优化求解</h3><h3 id="类型-网络文章-1" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-1"><span>类型：网络文章</span></a></h3><h3 id="作者-冯扬" tabindex="-1"><a class="header-anchor" href="#作者-冯扬"><span>作者：冯扬</span></a></h3><h3 id="说明-17" tabindex="-1"><a class="header-anchor" href="#说明-17"><span>说明：</span></a></h3><p>是对FTRL的通俗版解说。</p><h3>题目：Ad Click Prediction: a View from the Trenches</h3><h3 id="类型-论文-11" tabindex="-1"><a class="header-anchor" href="#类型-论文-11"><span>类型：论文</span></a></h3><h3 id="作者-google-2" tabindex="-1"><a class="header-anchor" href="#作者-google-2"><span>作者：Google</span></a></h3><h3 id="说明-18" tabindex="-1"><a class="header-anchor" href="#说明-18"><span>说明：</span></a></h3><p>FTRL工程实现解读。</p><h3>题目：Factorization Machines</h3><h3 id="类型-论文-12" tabindex="-1"><a class="header-anchor" href="#类型-论文-12"><span>类型：论文</span></a></h3><h3 id="作者-steffen-rendle" tabindex="-1"><a class="header-anchor" href="#作者-steffen-rendle"><span>作者：Steffen Rendle</span></a></h3><h3 id="说明-19" tabindex="-1"><a class="header-anchor" href="#说明-19"><span>说明：</span></a></h3><p>提出FM模型的论文，FM用于CTR预估。</p><h3>题目：Field-aware Factorization Machines for CTR Prediction</h3><h3 id="类型-论文-13" tabindex="-1"><a class="header-anchor" href="#类型-论文-13"><span>类型：论文</span></a></h3><h3 id="作者-yuchin-juan" tabindex="-1"><a class="header-anchor" href="#作者-yuchin-juan"><span>作者：Yuchin Juan</span></a></h3><h3 id="说明-20" tabindex="-1"><a class="header-anchor" href="#说明-20"><span>说明：</span></a></h3><p>FFM模型，用于CTR预估。</p><h3>题目：Practical Lessons from Predicting Clicks on Ads at Facebook</h3><h3 id="类型-论文-14" tabindex="-1"><a class="header-anchor" href="#类型-论文-14"><span>类型：论文</span></a></h3><h3 id="说明-21" tabindex="-1"><a class="header-anchor" href="#说明-21"><span>说明：</span></a></h3><p>提出了LR + GBDT的CTR预估模型。</p><h3>题目：Wide &amp; Deep Learning for Recommender Systems</h3><h3 id="类型-论文-15" tabindex="-1"><a class="header-anchor" href="#类型-论文-15"><span>类型：论文</span></a></h3><h3 id="作者-google-3" tabindex="-1"><a class="header-anchor" href="#作者-google-3"><span>作者：Google</span></a></h3><h3 id="说明-22" tabindex="-1"><a class="header-anchor" href="#说明-22"><span>说明：</span></a></h3><p>提出融合深度和宽度模型的Wide&amp;Deep模型，用于CTR预估。</p><h2 id="_5-bandit算法" tabindex="-1"><a class="header-anchor" href="#_5-bandit算法"><span>5.Bandit算法</span></a></h2><h3>题目：Introduction to Bandits- Algorithms and Theory Part 1- Bandits with small sets of actions</h3><h3 id="类型-演示文稿-1" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿-1"><span>类型：演示文稿</span></a></h3><h3 id="作者-jean-yves-audibert等" tabindex="-1"><a class="header-anchor" href="#作者-jean-yves-audibert等"><span>作者：Jean-Yves Audibert等</span></a></h3><h3 id="说明-23" tabindex="-1"><a class="header-anchor" href="#说明-23"><span>说明：</span></a></h3><p>介绍bandit算法概念，理论和算法，这部分主要针对小的选项候选集。</p><h3>题目：Introduction to Bandits- Algorithms and Theory Part 2- Bandits with large sets of actions</h3><h3 id="类型-演示文稿-2" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿-2"><span>类型：演示文稿</span></a></h3><h3 id="作者-jean-yves-audibert等-1" tabindex="-1"><a class="header-anchor" href="#作者-jean-yves-audibert等-1"><span>作者：Jean-Yves Audibert等</span></a></h3><h3 id="说明-24" tabindex="-1"><a class="header-anchor" href="#说明-24"><span>说明：</span></a></h3><p>介绍Bandit算法概念，理论和算法，这部分主要针对较大的选项候选集。</p><h3>题目：A Contextual-Bandit Approach to Personalized News Article Recommendation</h3><h3 id="类型-论文-16" tabindex="-1"><a class="header-anchor" href="#类型-论文-16"><span>类型：论文</span></a></h3><h3 id="作者-yahoo" tabindex="-1"><a class="header-anchor" href="#作者-yahoo"><span>作者：Yahoo</span></a></h3><h3 id="说明-25" tabindex="-1"><a class="header-anchor" href="#说明-25"><span>说明：</span></a></h3><p>Linucb的原始论文，考虑上下文的Bandit算法。</p><h3>题目：Collaborative Filtering Bandits</h3><h3 id="类型-论文-17" tabindex="-1"><a class="header-anchor" href="#类型-论文-17"><span>类型：论文</span></a></h3><h3 id="作者-shuai-li等" tabindex="-1"><a class="header-anchor" href="#作者-shuai-li等"><span>作者：Shuai Li等</span></a></h3><h3 id="说明-26" tabindex="-1"><a class="header-anchor" href="#说明-26"><span>说明：</span></a></h3><p>Bandit 算法与协同过滤结合，提出COFIBA算法。</p><h2 id="_6-深度学习" tabindex="-1"><a class="header-anchor" href="#_6-深度学习"><span>6.深度学习</span></a></h2><h3>题目：Deep Neural Networks for YouTube Recommendations</h3><h3 id="类型-论文-18" tabindex="-1"><a class="header-anchor" href="#类型-论文-18"><span>类型：论文</span></a></h3><h3 id="作者-google-4" tabindex="-1"><a class="header-anchor" href="#作者-google-4"><span>作者：Google</span></a></h3><h3 id="说明-27" tabindex="-1"><a class="header-anchor" href="#说明-27"><span>说明：</span></a></h3><p>介绍YouTube视频推荐系统在深度神经网络上的尝试。能从中看到wide&amp;deep模型的影子。</p><h3>题目：Efficient Estimation of Word Representations in Vector Space</h3><h3 id="类型-论文-19" tabindex="-1"><a class="header-anchor" href="#类型-论文-19"><span>类型：论文</span></a></h3><h3 id="作者-google-5" tabindex="-1"><a class="header-anchor" href="#作者-google-5"><span>作者：Google</span></a></h3><h3 id="说明-28" tabindex="-1"><a class="header-anchor" href="#说明-28"><span>说明：</span></a></h3><p>Word2Vec的作者在这篇文章中提出了一种词嵌入向量学习方法，也就是把开源工具包Word2Vec背后的模型详细介绍了一次。理论上很简单，更多是一些工程技巧的分享。Word2Vec给推荐系统带来了一种新的隐因子向量学习方法，深陷评分预测泥潭的矩阵分解被开拓了思路。</p><h3>题目：Item2Vec: Neural Item Embedding for Collaborative Filtering</h3><h3 id="类型-论文-20" tabindex="-1"><a class="header-anchor" href="#类型-论文-20"><span>类型：论文</span></a></h3><h3 id="作者-microsoft" tabindex="-1"><a class="header-anchor" href="#作者-microsoft"><span>作者：Microsoft</span></a></h3><h3 id="说明-29" tabindex="-1"><a class="header-anchor" href="#说明-29"><span>说明：</span></a></h3><p>这篇就是借鉴了word2vec在语言建模中的思路，为推荐系统的行为建模，从中为物品学习嵌入向量。</p><h3>题目：Learning Representations of Text using Neural Networks</h3><h3 id="类型-演示文稿-3" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿-3"><span>类型：演示文稿</span></a></h3><h3 id="作者-google-6" tabindex="-1"><a class="header-anchor" href="#作者-google-6"><span>作者：Google</span></a></h3><h3 id="说明-30" tabindex="-1"><a class="header-anchor" href="#说明-30"><span>说明：</span></a></h3><p>理解为word2vec作者写一个教程。</p><h3>题目：Long Short-Term Memory</h3><h3 id="类型-论文-21" tabindex="-1"><a class="header-anchor" href="#类型-论文-21"><span>类型：论文</span></a></h3><h3 id="作者-sepp-hochreiter等" tabindex="-1"><a class="header-anchor" href="#作者-sepp-hochreiter等"><span>作者：Sepp Hochreiter等</span></a></h3><h3 id="说明-31" tabindex="-1"><a class="header-anchor" href="#说明-31"><span>说明：</span></a></h3><p>可以用来为序列建模的LSTM，实际上在1997年就发表论文了，只是在十几年后才大火。</p><h3>题目：An Empirical Exploration of Recurrent Network Architectures</h3><h3 id="类型-论文-22" tabindex="-1"><a class="header-anchor" href="#类型-论文-22"><span>类型：论文</span></a></h3><h3 id="作者-google-7" tabindex="-1"><a class="header-anchor" href="#作者-google-7"><span>作者：Google</span></a></h3><h3 id="说明-32" tabindex="-1"><a class="header-anchor" href="#说明-32"><span>说明：</span></a></h3><p>Google在RNN模型使用上的经验分享。</p><h3>题目：Recurrent Neural Networks for Collaborative Filtering</h3><h3 id="类型-网络文章-2" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-2"><span>类型：网络文章</span></a></h3><h3 id="作者-erik-bernhardsson" tabindex="-1"><a class="header-anchor" href="#作者-erik-bernhardsson"><span>作者：Erik Bernhardsson</span></a></h3><h3 id="说明-33" tabindex="-1"><a class="header-anchor" href="#说明-33"><span>说明：</span></a></h3><p>这是Erik Bernhardsson在Spotify期间所做的尝试，用RNN自动构建音乐播单。Erik Bernhardsson还有一项开源项目Annoy，用于稠密向量的近邻搜索，在推荐系统中也用得较多。</p><h2 id="_7-其他实用算法" tabindex="-1"><a class="header-anchor" href="#_7-其他实用算法"><span>7.其他实用算法</span></a></h2><h3>题目：Detecting Near-Duplicates for Web Crawling</h3><h3 id="类型-论文-23" tabindex="-1"><a class="header-anchor" href="#类型-论文-23"><span>类型：论文</span></a></h3><h3 id="作者-google-8" tabindex="-1"><a class="header-anchor" href="#作者-google-8"><span>作者：Google</span></a></h3><h3 id="说明-34" tabindex="-1"><a class="header-anchor" href="#说明-34"><span>说明：</span></a></h3><p>在这篇论文中提出了simhash算法，用于大规模网页去重。</p><h3>题目：Weighted Random Sampling over Data Streams</h3><h3 id="类型-论文-24" tabindex="-1"><a class="header-anchor" href="#类型-论文-24"><span>类型：论文</span></a></h3><h3 id="作者-pavlos-s-efraimidis" tabindex="-1"><a class="header-anchor" href="#作者-pavlos-s-efraimidis"><span>作者：Pavlos S. Efraimidis</span></a></h3><h3 id="说明-35" tabindex="-1"><a class="header-anchor" href="#说明-35"><span>说明：</span></a></h3><p>对流式数据的加权采样。</p><h3>题目：Weighted Sampling Without Replacement from Data Streams</h3><h3 id="类型-论文-25" tabindex="-1"><a class="header-anchor" href="#类型-论文-25"><span>类型：论文：</span></a></h3><h3 id="作者-vladimir-braverman等" tabindex="-1"><a class="header-anchor" href="#作者-vladimir-braverman等"><span>作者：Vladimir Braverman等</span></a></h3><h3 id="说明-36" tabindex="-1"><a class="header-anchor" href="#说明-36"><span>说明：</span></a></h3><p>介绍了两种对流式数据的加权采样。</p><h2 id="工程篇" tabindex="-1"><a class="header-anchor" href="#工程篇"><span>工程篇</span></a></h2><h2 id="_1-常见架构" tabindex="-1"><a class="header-anchor" href="#_1-常见架构"><span>1.常见架构</span></a></h2><h3>题目：Activity Feeds Architecture</h3><h3 id="类型-演示文稿-4" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿-4"><span>类型：演示文稿</span></a></h3><h3 id="作者-etsy" tabindex="-1"><a class="header-anchor" href="#作者-etsy"><span>作者：Etsy</span></a></h3><h3 id="说明-37" tabindex="-1"><a class="header-anchor" href="#说明-37"><span>说明：</span></a></h3><p>本文非常详细地介绍了社交动态信息流的架构设计细节。</p><h3>题目：Atom Activity Streams 1.0</h3><h3 id="类型-规范文档" tabindex="-1"><a class="header-anchor" href="#类型-规范文档"><span>类型：规范文档</span></a></h3><h3 id="作者-activity-streams-working-group" tabindex="-1"><a class="header-anchor" href="#作者-activity-streams-working-group"><span>作者：Activity Streams Working Group</span></a></h3><h3 id="说明-38" tabindex="-1"><a class="header-anchor" href="#说明-38"><span>说明：</span></a></h3><p>这是一份动态信息流数据模型的协议规范文档，由Activity Streams Working Group共同发出，这个组织包含Google和Microsoft。</p><h3>题目：Beyond the 5 stars（Netflix Recommendations）</h3><h3 id="类型-网络文章-3" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-3"><span>类型：网络文章</span></a></h3><h3 id="作者-netflix" tabindex="-1"><a class="header-anchor" href="#作者-netflix"><span>作者：Netflix</span></a></h3><h3 id="说明-39" tabindex="-1"><a class="header-anchor" href="#说明-39"><span>说明：</span></a></h3><p>Netflix详细宏观上介绍了自家推荐系统的产品形态，不只是比赛中的评分预测那么简单的。</p><h3>题目：System Architectures for Personalization and Recommendation</h3><h3 id="类型-网络文章-4" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-4"><span>类型：网络文章</span></a></h3><h3 id="作者-netflix-1" tabindex="-1"><a class="header-anchor" href="#作者-netflix-1"><span>作者：Netflix</span></a></h3><h3 id="说明-40" tabindex="-1"><a class="header-anchor" href="#说明-40"><span>说明：</span></a></h3><p>Netflix 推荐系统的架构介绍。</p><h3>题目：Information Seeking-Convergence of Search, Recommendations and Advertising</h3><h3 id="类型-论文-26" tabindex="-1"><a class="header-anchor" href="#类型-论文-26"><span>类型：论文</span></a></h3><h3 id="作者-h-garcia-molina等" tabindex="-1"><a class="header-anchor" href="#作者-h-garcia-molina等"><span>作者：H Garcia-Molina等</span></a></h3><h3 id="说明-41" tabindex="-1"><a class="header-anchor" href="#说明-41"><span>说明：</span></a></h3><p>探讨搜索、推荐、广告三者架构统一。</p><h2 id="_2-关键模块" tabindex="-1"><a class="header-anchor" href="#_2-关键模块"><span>2.关键模块</span></a></h2><h3>题目：Overlapping Experiment Infrastructure- More, Better, Faster Experimentation</h3><h3 id="类型-论文-27" tabindex="-1"><a class="header-anchor" href="#类型-论文-27"><span>类型：论文</span></a></h3><h3 id="作者-google-9" tabindex="-1"><a class="header-anchor" href="#作者-google-9"><span>作者：Google</span></a></h3><h3 id="说明-42" tabindex="-1"><a class="header-anchor" href="#说明-42"><span>说明：</span></a></h3><p>ABTest实验平台的扛鼎之作，Google出品，值得拥有。</p><h3>题目：TencentRec：Real-time Stream Recommendation in Practice</h3><h3 id="类型-论文-28" tabindex="-1"><a class="header-anchor" href="#类型-论文-28"><span>类型：论文</span></a></h3><h3 id="作者-腾讯" tabindex="-1"><a class="header-anchor" href="#作者-腾讯"><span>作者：腾讯</span></a></h3><h3 id="说明-43" tabindex="-1"><a class="header-anchor" href="#说明-43"><span>说明：</span></a></h3><p>介绍了腾讯内部的实时推荐系统架构。</p><h3>题目：Personalization at Spotify using Cassandra</h3><h3 id="类型-网络文章-5" tabindex="-1"><a class="header-anchor" href="#类型-网络文章-5"><span>类型：网络文章</span></a></h3><h3 id="作者-spotify" tabindex="-1"><a class="header-anchor" href="#作者-spotify"><span>作者：Spotify</span></a></h3><h3 id="说明-44" tabindex="-1"><a class="header-anchor" href="#说明-44"><span>说明：</span></a></h3><p>介绍了Spotify在推荐系统所用到的数据存储中间件。</p><h2 id="_3-效果保证" tabindex="-1"><a class="header-anchor" href="#_3-效果保证"><span>3.效果保证</span></a></h2><h3>题目：Tutorial on Robustness of Recommender Systems</h3><h3 id="类型-演示文稿-5" tabindex="-1"><a class="header-anchor" href="#类型-演示文稿-5"><span>类型：演示文稿</span></a></h3><h3 id="作者-neil-hurley" tabindex="-1"><a class="header-anchor" href="#作者-neil-hurley"><span>作者：Neil Hurley</span></a></h3><h3 id="说明-45" tabindex="-1"><a class="header-anchor" href="#说明-45"><span>说明：</span></a></h3><p>本文非常详细讨论了对推荐系统的攻击和防护，并有实验模拟。</p><h3>题目：Recommender Systems Handbook(第八章)</h3><h3 id="类型-书-2" tabindex="-1"><a class="header-anchor" href="#类型-书-2"><span>类型：书</span></a></h3><h3 id="作者-francesco-ricci等-2" tabindex="-1"><a class="header-anchor" href="#作者-francesco-ricci等-2"><span>作者：Francesco Ricci等</span></a></h3><h3 id="说明-46" tabindex="-1"><a class="header-anchor" href="#说明-46"><span>说明：</span></a></h3><p>该书第八章介绍了能见到的几乎所有推荐系统评价指标，只是实际上用不到这么多指标。</p><h2 id="其他书目" tabindex="-1"><a class="header-anchor" href="#其他书目"><span>其他书目</span></a></h2><ol><li>Pattern Recognization and Machine Learning（机器学习基础，有此一本足够了）。</li><li>推荐系统实践（国内唯一一本非翻译的推荐系统书籍，入门必选）。</li><li>信号与噪声（介绍贝叶斯统计的一本科普书）。</li><li>复杂（推荐系统面对的是复杂网络，了解复杂系统和复杂网络的特点，有助于开脑洞）。</li><li>信息简史（既然是信息经济，当然要读一本关于信息的历史）。</li></ol><p>知道你们不会读的，所以就不推荐太多了。但愿我这个激将法有助于你学习进步。</p><h3 id="打包资料地址" tabindex="-1"><a class="header-anchor" href="#打包资料地址"><span>打包资料地址</span></a></h3><p><a href="https://github.com/xingwudao/36" target="_blank" rel="noopener noreferrer">https://github.com/xingwudao/36</a></p>',258)]))}const p=e(r,[["render",i]]),c=JSON.parse('{"path":"/posts/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E4%B8%89%E5%8D%81%E5%85%AD%E5%BC%8F/%E7%BB%93%E6%9D%9F%E8%AF%AD%E4%B8%8E%E5%8F%82%E8%80%83%E9%98%85%E8%AF%BB/%E5%8A%A0%E9%A4%90%20_%20%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%82%E8%80%83%E9%98%85%E8%AF%BB.html","title":"加餐 _ 推荐系统的参考阅读","lang":"zh-CN","frontmatter":{"description":"加餐 _ 推荐系统的参考阅读 专栏主体内容已经结束了，在专栏写作的过程中，我阅读了很多业界公开的资料，我觉得有必要整理出来，供想深入阅读的人继续去找虐。 整体来说，在选择参考文献时，我偏爱那些由公司发表的。因为推荐系统本质上还是一种非常依赖实践的算法应用方向，并且，这些商业公司论文中的技术内容也在他们实际的场景中经过了检验。 另外，更多的内容是来自我自...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/interview/posts/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E4%B8%89%E5%8D%81%E5%85%AD%E5%BC%8F/%E7%BB%93%E6%9D%9F%E8%AF%AD%E4%B8%8E%E5%8F%82%E8%80%83%E9%98%85%E8%AF%BB/%E5%8A%A0%E9%A4%90%20_%20%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%82%E8%80%83%E9%98%85%E8%AF%BB.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"加餐 _ 推荐系统的参考阅读"}],["meta",{"property":"og:description","content":"加餐 _ 推荐系统的参考阅读 专栏主体内容已经结束了，在专栏写作的过程中，我阅读了很多业界公开的资料，我觉得有必要整理出来，供想深入阅读的人继续去找虐。 整体来说，在选择参考文献时，我偏爱那些由公司发表的。因为推荐系统本质上还是一种非常依赖实践的算法应用方向，并且，这些商业公司论文中的技术内容也在他们实际的场景中经过了检验。 另外，更多的内容是来自我自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T11:19:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T11:19:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"加餐 _ 推荐系统的参考阅读\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-16T11:19:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755343178000,"updatedTime":1755343178000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":9.87,"words":2962},"filePathRelative":"posts/推荐系统三十六式/结束语与参考阅读/加餐 _ 推荐系统的参考阅读.md","localizedDate":"2025年8月16日","excerpt":"\\n<p><audio id=\\"audio\\" title=\\"加餐 | 推荐系统的参考阅读\\" controls=\\"\\" preload=\\"none\\"><source id=\\"mp3\\" src=\\"https://static001.geekbang.org/resource/audio/51/db/5167fdb87e3a5450b0455d9c7acdf3db.mp3\\"></audio></p>\\n<p>专栏主体内容已经结束了，在专栏写作的过程中，我阅读了很多业界公开的资料，我觉得有必要整理出来，供想深入阅读的人继续去找虐。</p>\\n<p>整体来说，在选择参考文献时，我偏爱那些由公司发表的。因为推荐系统本质上还是一种非常依赖实践的算法应用方向，并且，这些商业公司论文中的技术内容也在他们实际的场景中经过了检验。</p>","autoDesc":true}');export{p as comp,c as data};
