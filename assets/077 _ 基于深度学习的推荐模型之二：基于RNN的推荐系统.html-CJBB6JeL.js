import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as o,o as n}from"./app-d8EKP-K0.js";const a={};function p(s,e){return n(),r("div",null,e[0]||(e[0]=[o('<h1 id="_077-基于深度学习的推荐模型之二-基于rnn的推荐系统" tabindex="-1"><a class="header-anchor" href="#_077-基于深度学习的推荐模型之二-基于rnn的推荐系统"><span>077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统</span></a></h1><p><audio id="audio" title="077 | 基于深度学习的推荐模型之二：基于RNN的推荐系统" controls="" preload="none"><source id="mp3" src="https://static001.geekbang.org/resource/audio/71/bc/71486b5621aa731a60fdccac3a5e71bc.mp3"></audio></p><p>周一我们看了一篇经典的文章，那就是尝试使用受限波兹曼机（RBM）来对推荐系统建模。这应该是最早把深度学习应用到推荐建模的典范。当然，RBM虽然算是相对比较早的深度学习模型，但其本质上并没有很多后来提出的深度模型的特质，也没有真正发挥出深度学习模型的特有优势。</p><p>今天，我们结合几篇论文来看一类深度学习模型，那就是“<strong>递归神经网络</strong>”（Recurrent Neural Network），简称 <strong>RNN</strong>，在推荐系统中的应用。这类模型可以解决传统推荐模型中难以对时序信息进行建模的问题，扩宽了推荐系统的应用边界。</p><h2 id="时序信息建模" tabindex="-1"><a class="header-anchor" href="#时序信息建模"><span>时序信息建模</span></a></h2><p>要想说清楚RNN对于推荐系统的贡献，我们首先要来看一看为什么需要对时序信息进行建模。</p><p>在我们前面介绍的诸多推荐模型中，不管是矩阵分解，还是简单的基于流行度的推荐模型，或是其他更加复杂的张量分解等模型，其实都没有内置“时间”这个概念。</p><p>比方说，我们通过矩阵分解来对用户和物品的评分进行建模。在这个建模的场景里，用户物品评分矩阵是针对所有数据的，不管是用户昨天对某个物品进行评分还是今天，甚至是一年以前，所有数据都是在唯一一个矩阵里面加以表示。这么做的好处是，极大地简化了真实情况，不好的地方则是完全忽略了所有评分在时间上的发展。</p><p>其实早在Netflix大赛中，一些学者就在Netflix公布的数据集上发现，用户对于电影的喜爱程度，或者说评分数值，有非常明显的随时间变化而变化的趋势。文末我列的参考文献[1]，这篇论文就是充分挖掘了时间信息从而带来了性能上的提升，如果你有兴趣的话，建议读一读这篇文章。</p><p>在深度学习模型，特别是RNN之前，如果我们希望对时间进行建模，从模型工具的角度上来说，我们都有哪些选择呢？</p><p><strong>一种办法是可以尝试使用传统的“时序模型”（Time Series Models）</strong>。这一类模型在统计领域已经使用了较长时间，然而最大的问题就是，很多工具很难直接和我们提到的这些推荐模型进行嫁接。另外一个难点是在嫁接之后，模型的训练算法往往会变得异常复杂，这也给模型的普及和使用带来了很多障碍。</p><p><strong>另外一种办法，就是尝试在现有的模型里通过特性（Feature）或者其他的方法，来让当前的模型能够对时间信息进行建模</strong>。这个思路其实是对矩阵分解进行了修改。这样做的好处就是可以根据自己的需要在某一个模型上进行必要的更改，然而这么做的先天性缺陷就在于提出来的修改往往只能针对某一个模型，而没有办法扩展到其他模型。</p><p><strong>第三种做法是可以利用张量分解（Tensor Factorization）</strong>。我们直接把时间作为一个新的维度，因此可以对用户在某一个时间段对某个物品的评分进行建模，有一些工作是基于这个假设的。</p><p>不过，直接利用张量分解的最大问题是，张量本身并不是时序模型，利用张量对时序信息进行建模仅仅是因为时序信息大多时候可以被表达成为离散的数据，因此张量才在这里有了用武之地。然而，因为张量无法直接对离散时序的两位数据点之间进行约束建模，比如时间点“昨天”和时间点“今天”可能在张量中占据两个不同的数据点，但是张量本身并不能把这两个数据点联系起来。也就是说，张量在“语义”（Semantics）上其实并不支持时序数据。</p><p>基于以上这些原因，我们需要有新的工具来对时序信息进行比较直接的建模，同时也能有相对容易的学习算法。</p><h2 id="基于rnn的推荐模型" tabindex="-1"><a class="header-anchor" href="#基于rnn的推荐模型"><span>基于RNN的推荐模型</span></a></h2><p>RNN作为深度学习中有力的时序信息建模工具，随着深度学习的火热，被越来越多的学者用来解决我们刚才所说的这些问题。我们一起来看两篇论文，可以说这两篇文章是RNN在推荐领域应用的重要参考。</p><p>除了从工具的角度来讲为什么需要RNN以外，还有一个是从实际的场景出发，也就是在同一个“<strong>会话</strong>”（Session）中的推荐结果，这是一个比较突出的需要时序信息的场景，且传统的方法无法很好地解决。</p><p>在这方面比较早的尝试，来自于在ICLR2016上发表的一篇论文《使用递归神经网络的基于会话的推荐》（Session-based recommendations with recurrent neural networks）[2]。这里面的基本思路其实很直观，就是在推荐系统中使用某种RNN模型，在这篇论文里使用的是 <strong>GRU</strong>（Gated Recurrent Unit）。我们在这里不展开RNN或者GRU的定义细节以及这些模型里面的特征。我们从比较高的维度来讲一讲RNN的建模思路。</p><p>RNN的输入是当前的一个物品，然后RNN需要输出的是对于下一个物品的预测，同时为了能够对这些在时间序列上的物品进行建模，RNN内部也要维持一个隐含的状态序列，这个状态序列会随着时间的变化而变化。不同的RNN模型在以下内容的实现上有所不同，包括如何实现这个隐含的状态序列，以及如何对从状态序列到输入和输出物品的建模。</p><p>总的来说，这篇论文就是直接把目前在自然语言处理中经常使用的GRU拿到了推荐领域，并且做了一些微小的修改。从实验结果来看，如果我们对会话进行建模的话，效果要明显好于没有对会话进行建模。</p><p>再介绍一个比单对会话进行建模更进一步的工作，是发表于WSDM2017上的一篇论文《递归推荐网络》（Recurrent Recommender Networks）[3]。我们前面提到了，矩阵分解的最大问题就是学习到的用户以及物品向量无法囊括时间的信息。在这篇论文里，作者们假定用户的隐向量，物品的隐向量都会随着时间的变化而变化，而在某一个时刻的物品评分仅仅是那一个时刻的用户隐向量和物品隐向量的一个结合。在传统的模型里，要描述这种隐向量随着时间的变化而变化的思路就会充满难度。</p><p>在这篇论文里，一个重要的贡献就是使用了一种叫 <strong>LSTM</strong>（Long Short-Term Memory）的RNN模型，来对这些用户的隐变量随着时间的变化而变化进行建模。我们在这里也不展开LSTM的基本定义。总体来说，LSTM也是对某一组输入变量和输出变量在时间上的关系进行建模，同时利用内部隐状态序列来对输入和输出变量进行建模。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>今天我们聊了如何利用RNN对推荐系统中的时序信息进行建模。</p><p>一起来回顾下要点：第一，我们讨论了为什么对时序信息建模是非常必要的；第二，我们结合两篇论文，聊了利用RNN对时序信息建模的例子。</p><p>最后，给你留一个思考题，除了会话信息或者用户的喜好是比较明显的时序信息以外，推荐系统中还有哪些时序信息的应用呢？</p><p>欢迎你给我留言，和我一起讨论。</p><p><strong>参考文献</strong></p><ol><li><p>Yehuda Koren. <strong><a href="http://courses.ischool.berkeley.edu/i290-dm/s11/SECURE/a1-koren.pdf" target="_blank" rel="noopener noreferrer">Factor in the neighbors: Scalable and accurate collaborative filtering</a></strong>. ACM Trans. Knowl. Discov. Data 4, 1, Article 1 (January 2010), 24 pages, 2010.</p></li><li><p>Bal´azs Hidasi, Alexandros Karatzoglou, Linas Baltrunas, and Domonkos Tikk. <strong><a href="https://arxiv.org/pdf/1511.06939.pdf" target="_blank" rel="noopener noreferrer">Session-based recommendations with recurrent neural networks</a></strong>. International Conference on Learning Representations (2016), 2016.</p></li><li><p>Chao-Yuan Wu, Amr Ahmed, Alex Beutel, Alexander J. Smola, and How Jing. <strong><a href="http://alexbeutel.com/papers/rrn_wsdm2017.pdf" target="_blank" rel="noopener noreferrer">Recurrent Recommender Networks</a></strong>. Proceedings of the Tenth ACM International Conference on Web Search and Data Mining (WSDM &#39;17). ACM, New York, NY, USA, 495-503, 2017.</p></li></ol>',30)]))}const E=t(a,[["render",p]]),l=JSON.parse('{"path":"/posts/AI%E6%8A%80%E6%9C%AF%E5%86%85%E5%8F%82/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/077%20_%20%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E6%A8%A1%E5%9E%8B%E4%B9%8B%E4%BA%8C%EF%BC%9A%E5%9F%BA%E4%BA%8ERNN%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.html","title":"077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统","lang":"zh-CN","frontmatter":{"description":"077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统 周一我们看了一篇经典的文章，那就是尝试使用受限波兹曼机（RBM）来对推荐系统建模。这应该是最早把深度学习应用到推荐建模的典范。当然，RBM虽然算是相对比较早的深度学习模型，但其本质上并没有很多后来提出的深度模型的特质，也没有真正发挥出深度学习模型的特有优势。 今天，我们结合几篇论文来看一类深...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/interview/posts/AI%E6%8A%80%E6%9C%AF%E5%86%85%E5%8F%82/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/077%20_%20%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E6%A8%A1%E5%9E%8B%E4%B9%8B%E4%BA%8C%EF%BC%9A%E5%9F%BA%E4%BA%8ERNN%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统"}],["meta",{"property":"og:description","content":"077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统 周一我们看了一篇经典的文章，那就是尝试使用受限波兹曼机（RBM）来对推荐系统建模。这应该是最早把深度学习应用到推荐建模的典范。当然，RBM虽然算是相对比较早的深度学习模型，但其本质上并没有很多后来提出的深度模型的特质，也没有真正发挥出深度学习模型的特有优势。 今天，我们结合几篇论文来看一类深..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T11:19:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T11:19:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-16T11:19:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755343178000,"updatedTime":1755343178000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":7.7,"words":2311},"filePathRelative":"posts/AI技术内参/推荐系统核心技术/077 _ 基于深度学习的推荐模型之二：基于RNN的推荐系统.md","localizedDate":"2025年8月16日","excerpt":"\\n<p><audio id=\\"audio\\" title=\\"077 | 基于深度学习的推荐模型之二：基于RNN的推荐系统\\" controls=\\"\\" preload=\\"none\\"><source id=\\"mp3\\" src=\\"https://static001.geekbang.org/resource/audio/71/bc/71486b5621aa731a60fdccac3a5e71bc.mp3\\"></audio></p>\\n<p>周一我们看了一篇经典的文章，那就是尝试使用受限波兹曼机（RBM）来对推荐系统建模。这应该是最早把深度学习应用到推荐建模的典范。当然，RBM虽然算是相对比较早的深度学习模型，但其本质上并没有很多后来提出的深度模型的特质，也没有真正发挥出深度学习模型的特有优势。</p>","autoDesc":true}');export{E as comp,l as data};
