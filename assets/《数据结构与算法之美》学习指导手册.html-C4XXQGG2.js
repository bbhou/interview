import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as t,o as r}from"./app-d8EKP-K0.js";const n={};function s(h,p){return r(),e("div",null,p[0]||(p[0]=[t('<h1 id="《数据结构与算法之美》学习指导手册" tabindex="-1"><a class="header-anchor" href="#《数据结构与算法之美》学习指导手册"><span>《数据结构与算法之美》学习指导手册</span></a></h1><p><audio id="audio" title="《数据结构与算法之美》学习指导手册" controls="" preload="none"><source id="mp3" src="https://static001.geekbang.org/resource/audio/4c/80/4cb2010b28b77652de60e0d9b1aa6480.mp3"></audio></p><p>你好，我是王争。</p><p>在设计专栏内容的时候，为了兼顾不同基础的同学，我在内容上做到了难易结合，既有简单的数组、链表、栈、队列这些基础内容，也有红黑树、BM、KMP这些难度较大的算法。但是，对于初学者来说，一下子面对这么多知识，可能还是比较懵。</p><p>我觉得，对于初学者来说，先把最简单、最基础、最重要的知识点掌握好，再去研究难度较高、更加高级的知识点，这样由易到难、循序渐进的学习路径，无疑是最合理的。</p><p>基于这个路径，我对专栏内容，重新做了一次梳理，希望给你一份具体、明确、有效的学习指导。我会写清楚<strong>每个知识点的难易程度、需要你掌握到什么程度、具体如何来学习</strong>。</p><p>如果你是数据结构和算法的初学者，或者你觉得自己的基础比较薄弱，希望这份学习指导，能够让你学起来能更加有的放矢，能把精力、时间花在刀刃上，获得更好的学习效果。</p><p>下面，我先给出一个大致的学习路线。</p><img src="https://static001.geekbang.org/resource/image/54/48/54163f16e152f71b8f91d3fba652cf48.jpg" alt=""><p>现在，针对每个知识点，我再给你逐一解释一下。我这里先说明一下，下面标记的难易程度、是否重点、掌握程度，都只是针对初学者来说的，如果你已经有一定基础，可以根据自己的情况，安排自己的学习。</p><h2 id="_1-复杂度分析" tabindex="-1"><a class="header-anchor" href="#_1-复杂度分析"><span>1.复杂度分析</span></a></h2><p>尽管在专栏中，我只用了两节课的内容，来讲复杂度分析这个知识点。但是，我想说的是，它真的非常重要。你必须要牢牢掌握这两节，基本上要做到，简单代码能很快分析出时间、空间复杂度；对于复杂点的代码，比如递归代码，你也要掌握专栏中讲到的两种分析方法：递推公式和递归树。</p><p>对于初学者来说，光看入门篇的两节复杂度分析文章，可能还不足以完全掌握复杂度分析。不过，在后续讲解每种数据结构和算法的时候，我都有详细分析它们的时间、空间复杂度。所以，你可以在学习专栏中其他章节的时候，再不停地、有意识地去训练自己的复杂度分析能力。</p><p>难易程度：Medium</p><p>是否重点：10分</p><p>掌握程度：在不看我的分析的情况下，能自行分析专栏中大部分数据结构和算法的时间、空间复杂度</p><h2 id="_2-数组、栈、队列" tabindex="-1"><a class="header-anchor" href="#_2-数组、栈、队列"><span>2.数组、栈、队列</span></a></h2><p>这一部分内容非常简单，初学者学起来也不会很难。但是，作为基础的数据结构，数组、栈、队列，是后续很多复杂数据结构和算法的基础，所以，这些内容你一定要掌握。</p><p>难易程度：Easy</p><p>是否重点：8分</p><p>掌握程度：能自己实现动态数组、栈、队列</p><h2 id="_3-链表" tabindex="-1"><a class="header-anchor" href="#_3-链表"><span>3.链表</span></a></h2><p>链表非常重要！虽然理论内容不多，但链表上的操作却很复杂。所以，面试中经常会考察，你一定要掌握。而且，我这里说“掌握”不只是能看懂专栏中的内容，还能将专栏中提到的经典链表题目，比如链表反转、求中间结点等，轻松无bug地实现出来。</p><p>难易程度：Medium</p><p>是否重点：9分</p><p>掌握程度：能轻松写出经典链表题目代码</p><h2 id="_4-递归" tabindex="-1"><a class="header-anchor" href="#_4-递归"><span>4.递归</span></a></h2><p>对于初学者来说，递归代码非常难掌握，不管是读起来，还是写起来。但是，这道坎你必须要跨过，跨不过就不能算是入门数据结构和算法。我们后面讲到的很多数据结构和算法的代码实现，都要用到递归。</p><p>递归相关的理论知识也不多，所以还是要多练。你可以先在网上找些简单的题目练手，比如斐波那契数列、求阶乘等，然后再慢慢过渡到更加有难度的，比如归并排序、快速排序、二叉树的遍历、求高度，最后是回溯八皇后、背包问题等。</p><p>难易程度：Hard</p><p>是否重点：10分</p><p>掌握程度：轻松写出二叉树遍历、八皇后、背包问题、DFS的递归代码</p><h2 id="_5-排序、二分查找" tabindex="-1"><a class="header-anchor" href="#_5-排序、二分查找"><span>5.排序、二分查找</span></a></h2><p>这一部分并不难，你只需要能看懂我专栏里的内容即可。</p><p>难易程度：Easy</p><p>是否重点：7分</p><p>掌握程度：能自己把各种排序算法、二分查找及其变体代码写一遍就可以了</p><h2 id="_6-跳表" tabindex="-1"><a class="header-anchor" href="#_6-跳表"><span>6.跳表</span></a></h2><p>对于初学者来说，并不需要非得掌握跳表，所以，如果没有精力，这一章节可以先跳过。</p><p>难易程度：Medium</p><p>是否重点：6分</p><p>掌握程度：初学者可以先跳过。如果感兴趣，看懂专栏内容即可，不需要掌握代码实现</p><h2 id="_7-散列表" tabindex="-1"><a class="header-anchor" href="#_7-散列表"><span>7.散列表</span></a></h2><p>尽管散列表的内容我讲了很多，有三节课。但是，总体上来讲，这块内容理解起来并不难。但是，作为一种应用非常广泛的数据结构，你还是要掌握牢固散列表。</p><p>难易程度：Medium</p><p>是否重点：8分</p><p>掌握程度：对于初学者来说，自己能代码实现一个拉链法解决冲突的散列表即可</p><h2 id="_8-哈希算法" tabindex="-1"><a class="header-anchor" href="#_8-哈希算法"><span>8.哈希算法</span></a></h2><p>这部分纯粹是为了开拓思路，初学者可以略过。</p><p>难易程度：Easy</p><p>是否重点：3分</p><p>掌握程度：可以暂时不看</p><h2 id="_9-二叉树" tabindex="-1"><a class="header-anchor" href="#_9-二叉树"><span>9.二叉树</span></a></h2><p>这一部分非常重要！二叉树在面试中经常会被考到，所以要重点掌握。但是我这里说的二叉树，并不包含专栏中红黑树的内容。红黑树我们待会再讲。</p><p>难易程度：Medium</p><p>是否重点：9分</p><p>掌握程度：能代码实现二叉树的三种遍历算法、按层遍历、求高度等经典二叉树题目</p><h2 id="_10-红黑树" tabindex="-1"><a class="header-anchor" href="#_10-红黑树"><span>10.红黑树</span></a></h2><p>对于初学者来说，这一节课完全可以不看。</p><p>难易程度：Hard</p><p>是否重点：3分</p><p>掌握程度：初学者不用把时间浪费在上面</p><h2 id="_11-b-树" tabindex="-1"><a class="header-anchor" href="#_11-b-树"><span>11. B+树</span></a></h2><p>虽然B+树也算是比较高级的一种数据结构了，但是对初学者来说，也不是重点。有时候面试的时候还是会问的，所以这一部分内容，你能看懂专栏里的讲解就可以了。</p><p>难易程度：Medium</p><p>是否重点：5分</p><p>掌握程度：可看可不看</p><h2 id="_12-堆与堆排序" tabindex="-1"><a class="header-anchor" href="#_12-堆与堆排序"><span>12.堆与堆排序</span></a></h2><p>这一部分内容不是很难，初学者也是要掌握的。</p><p>难易程度：Medium</p><p>是否重点：8分</p><p>掌握程度：能代码实现堆、堆排序，并且掌握堆的三种应用（优先级队列、Top k、中位数）</p><h2 id="_13-图的表示" tabindex="-1"><a class="header-anchor" href="#_13-图的表示"><span>13.图的表示</span></a></h2><p>图的内容很多，但是初学者不需要掌握那么多。一般BAT等大厂面试，不怎么会面试有关图的内容，因为面试官可能也对这块不会很熟悉哈：）。但是，最基本图的概念、表示方法还是要掌握的。</p><p>难易程度：Easy</p><p>是否重点：8分</p><p>掌握程度：理解图的三种表示方法（邻接矩阵、邻接表、逆邻接表），能自己代码实现</p><h2 id="_14-深度广度优先搜索" tabindex="-1"><a class="header-anchor" href="#_14-深度广度优先搜索"><span>14.深度广度优先搜索</span></a></h2><p>这算是图上最基础的遍历或者说是搜索算法了，所以还是要掌握一下。这两种算法的原理都不难哈，但是代码实现并不简单，一个用到了队列，另一个用到了递归。对于初学者来说，看懂这两个代码实现就是一个挑战！可以等到其他更重要的内容都掌握之后，再来挑战，也是可以的。</p><p>难易程度：Hard</p><p>是否重点：8分</p><p>掌握程度：能代码实现广度优先、深度优先搜索算法</p><h2 id="_15-拓扑排序、最短路径、a-算法" tabindex="-1"><a class="header-anchor" href="#_15-拓扑排序、最短路径、a-算法"><span>15.拓扑排序、最短路径、A*算法</span></a></h2><p>这几个算法稍微高级点。如果你能轻松实现深度、广度优先搜索，那看懂这三个算法不成问题。不过，这三种算法不是重点。面试不会考的。</p><p>难易程度：Hard</p><p>是否重点：5分</p><p>掌握程度：有时间再看，暂时可以不看</p><h2 id="_16-字符串匹配-bf、rk" tabindex="-1"><a class="header-anchor" href="#_16-字符串匹配-bf、rk"><span>16.字符串匹配（BF、RK）</span></a></h2><p>BF非常简单，RK稍微复杂点，但都不难。这个最好还是掌握下。</p><p>难易程度：Easy</p><p>是否重点：7分</p><p>掌握程度：能实践BF算法，能看懂RK算法</p><h2 id="_17-字符串匹配-bm、kmp、ac自动机" tabindex="-1"><a class="header-anchor" href="#_17-字符串匹配-bm、kmp、ac自动机"><span>17.字符串匹配（BM、KMP、AC自动机）</span></a></h2><p>这三个算法都挺难的，对于算法有一定基础的人来说，看懂也不容易。所以，对于初学者来说，千万别浪费时间在这上面。即便有余力，看懂就好了，不用非得能自己实现。</p><p>难易程度：Hard</p><p>是否重点：3分</p><p>掌握程度：初学者不用把时间浪费在上面</p><h2 id="_18-字符串匹配-trie" tabindex="-1"><a class="header-anchor" href="#_18-字符串匹配-trie"><span>18.字符串匹配（Trie）</span></a></h2><p>这个还是要能看懂，不过不需要能代码实现。有些面试官喜欢考这个东西，主要是结合应用场景来考察，只是看你知不知道要用Trie树这个东西。</p><p>难易程度：Medium</p><p>是否重点：7分</p><p>掌握程度：能看懂，知道特点、应用场景即可，不要求代码实现</p><h2 id="_19-位图" tabindex="-1"><a class="header-anchor" href="#_19-位图"><span>19.位图</span></a></h2><p>位图不是重点，如果有余力最好掌握一下。</p><p>难易程度：Easy</p><p>是否重点：6分</p><p>掌握程度：看懂即可，能自己实现一个位图结构最好</p><h2 id="_20-四种算法思想" tabindex="-1"><a class="header-anchor" href="#_20-四种算法思想"><span>20.四种算法思想</span></a></h2><p>这个是重点，也是难点。贪心、分治、回溯、动态规划，每一个都不简单，其中动态规划又是最难、最烧脑的。要应付FLAG这样公司的面试，必须拿下这块内容。但是呢，学习要循序渐进，这块内容的学习可以放到最后，做个长时间的学习计划来攻克。</p><p>这块内容理论的东西不多，要想真的掌握，还是要大量刷题。</p><p>难易程度：Hard</p><p>是否重点：10分</p><p>掌握程度：可以放到最后，但是一定要掌握！做到能实现Leetcode上Medium难度的题目</p><p>学而时习之，专栏虽然已经结束，但是学习的同学和留言依旧源源不断。希望这份学习指导手册对你有帮助，也欢迎你继续给我留言，和大家一起交流、学习、进步。</p>',114)]))}const o=a(n,[["render",s]]),c=JSON.parse('{"path":"/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%8A%A0%E9%A4%90%EF%BC%9A%E4%B8%8D%E5%AE%9A%E6%9C%9F%E7%A6%8F%E5%88%A9/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E%E3%80%8B%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%AF%BC%E6%89%8B%E5%86%8C.html","title":"《数据结构与算法之美》学习指导手册","lang":"zh-CN","frontmatter":{"description":"《数据结构与算法之美》学习指导手册 你好，我是王争。 在设计专栏内容的时候，为了兼顾不同基础的同学，我在内容上做到了难易结合，既有简单的数组、链表、栈、队列这些基础内容，也有红黑树、BM、KMP这些难度较大的算法。但是，对于初学者来说，一下子面对这么多知识，可能还是比较懵。 我觉得，对于初学者来说，先把最简单、最基础、最重要的知识点掌握好，再去研究难度...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/interview/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%8A%A0%E9%A4%90%EF%BC%9A%E4%B8%8D%E5%AE%9A%E6%9C%9F%E7%A6%8F%E5%88%A9/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E%E3%80%8B%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%AF%BC%E6%89%8B%E5%86%8C.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"《数据结构与算法之美》学习指导手册"}],["meta",{"property":"og:description","content":"《数据结构与算法之美》学习指导手册 你好，我是王争。 在设计专栏内容的时候，为了兼顾不同基础的同学，我在内容上做到了难易结合，既有简单的数组、链表、栈、队列这些基础内容，也有红黑树、BM、KMP这些难度较大的算法。但是，对于初学者来说，一下子面对这么多知识，可能还是比较懵。 我觉得，对于初学者来说，先把最简单、最基础、最重要的知识点掌握好，再去研究难度..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T11:19:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T11:19:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《数据结构与算法之美》学习指导手册\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-16T11:19:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755343178000,"updatedTime":1755343178000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":9.08,"words":2725},"filePathRelative":"posts/数据结构与算法之美/加餐：不定期福利/《数据结构与算法之美》学习指导手册.md","localizedDate":"2025年8月16日","excerpt":"\\n<p><audio id=\\"audio\\" title=\\"《数据结构与算法之美》学习指导手册\\" controls=\\"\\" preload=\\"none\\"><source id=\\"mp3\\" src=\\"https://static001.geekbang.org/resource/audio/4c/80/4cb2010b28b77652de60e0d9b1aa6480.mp3\\"></audio></p>\\n<p>你好，我是王争。</p>\\n<p>在设计专栏内容的时候，为了兼顾不同基础的同学，我在内容上做到了难易结合，既有简单的数组、链表、栈、队列这些基础内容，也有红黑树、BM、KMP这些难度较大的算法。但是，对于初学者来说，一下子面对这么多知识，可能还是比较懵。</p>","autoDesc":true}');export{o as comp,c as data};
