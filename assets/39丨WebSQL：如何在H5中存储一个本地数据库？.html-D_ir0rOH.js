import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-d8EKP-K0.js";const p={};function l(t,a){return i(),n("div",null,a[0]||(a[0]=[e(`<h1 id="_39丨websql-如何在h5中存储一个本地数据库" tabindex="-1"><a class="header-anchor" href="#_39丨websql-如何在h5中存储一个本地数据库"><span>39丨WebSQL：如何在H5中存储一个本地数据库？</span></a></h1><p><audio id="audio" title="39丨WebSQL：如何在H5中存储一个本地数据库？" controls="" preload="none"><source id="mp3" src="https://static001.geekbang.org/resource/audio/07/2d/076c8dbf3c6c4934fd0886ac5bf45c2d.mp3"></audio></p><p>上一篇文章中，我们讲到了如何在Excel中使用SQL进行查询。在Web应用中，即使不通过后端语言与数据库进行操作，在Web前端中也可以使用WebSQL。WebSQL是一种操作本地数据库的网页API接口，通过它，我们就可以操作客户端的本地存储。</p><p>今天的课程主要包括以下几方面的内容：</p><ol><li>本地存储都有哪些，什么是WebSQL？</li><li>使用WebSQL的三个核心方法是什么？</li><li>如何使用WebSQL在本地浏览器中创建一个王者荣耀英雄数据库，并对它进行查询和页面的呈现？</li></ol><h2 id="本地存储都有哪些-什么是websql" tabindex="-1"><a class="header-anchor" href="#本地存储都有哪些-什么是websql"><span>本地存储都有哪些？什么是WebSQL？</span></a></h2><p>我刚才讲到了WebSQL实际上是本地存储。其实本地存储是个更大的概念，你现在可以打开Chrome浏览器，看下本地存储都包括了哪些。</p><p>Cookies是最早的本地存储，是浏览器提供的功能，并且对服务器和JS开放，这意味着我们可以通过服务器端和客户端保存Cookies。不过可以存储的数据总量大小只有4KB，如果超过了这个限制就会忽略，没法进行保存。</p><p>Local Storage与Session Storage都属于Web Storage。Web Storage和Cookies类似，区别在于它有更大容量的存储。其中Local Storage是持久化的本地存储，除非我们主动删除数据，否则会一直存储在本地。Session Storage只存在于Session会话中，也就是说只有在同一个Session的页面才能使用，当Session会话结束后，数据也会自动释放掉。</p><p>WebSQL与IndexedDB都是最新的HTML5本地缓存技术，相比于Local Storage和Session Storage来说，存储功能更强大，支持的数据类型也更多，比如图片、视频等。</p><p>WebSQL更准确的说是WebSQL DB API，它是一种操作本地数据库的网页API接口，通过API可以完成客户端数据库的操作。当我们使用WebSQL的时候，可以方便地用SQL来对数据进行增删改查。而这些浏览器客户端，比如Chrome和Safari会用SQLite实现本地存储。</p><p>如果说WebSQL方便我们对RDBMS进行操作，那么IndexedDB则是一种NoSQL方式。它存储的是key-value类型的数据，允许存储大量的数据，通常可以超过250M，并且支持事务，当我们对数据进行增删改查（CRUD）的时候可以通过事务来进行。</p><p><img src="https://static001.geekbang.org/resource/image/58/a2/58a474019f55d9854034ed244c4ec4a2.png" alt=""><br><br> 你能看到本地存储包括了多种存储方式，它可以很方便地将数据存储在客户端中，在使用的时候避免重复调用服务器的资源。</p><p>需要说明的是，今天我要讲的WebSQL并不属于HTML5规范的一部分，它是一个单独的规范，只是随着HTML5规范一起加入到了浏览器端。主流的浏览器比如Chrome、Safari和Firefox都支持WebSQL，我们可以在JavaScript脚本中使用WebSQL对客户端数据库进行操作。</p><h2 id="如何使用websql" tabindex="-1"><a class="header-anchor" href="#如何使用websql"><span>如何使用WebSQL</span></a></h2><p>如果你的浏览器不是上面说的那三种，怎么检测你的浏览器是否支持WebSQL呢？这里你可以检查下window对象中是否存在openDatabase属性，方法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>if (!window.openDatabase) {</span></span>
<span class="line"><span>  alert(&#39;浏览器不支持WebSQL&#39;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>                                </span></span>
<span class="line"><span>完整代码如下：</span></span>
<span class="line"><span>&amp;lt;!DOCTYPE HTML&amp;gt;</span></span>
<span class="line"><span>&amp;lt;html&amp;gt;</span></span>
<span class="line"><span>   &amp;lt;head&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;title&amp;gt;SQL必知必会&amp;lt;/title&amp;gt; </span></span>
<span class="line"><span>      &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;                   </span></span>
<span class="line"><span>        if (!window.openDatabase) {</span></span>
<span class="line"><span>                 alert(&#39;浏览器不支持WebSQL&#39;);</span></span>
<span class="line"><span>        }                               </span></span>
<span class="line"><span>      &amp;lt;/script&amp;gt;                    </span></span>
<span class="line"><span>   &amp;lt;/head&amp;gt;</span></span>
<span class="line"><span>           </span></span>
<span class="line"><span>   &amp;lt;body&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;div id=&amp;quot;status&amp;quot; name=&amp;quot;status&amp;quot;&amp;gt;WebSQL Test&amp;lt;/div&amp;gt;</span></span>
<span class="line"><span>   &amp;lt;/body&amp;gt;       </span></span>
<span class="line"><span>&amp;lt;/html&amp;gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果浏览器不支持WebSQL，会有弹窗提示“浏览器不支持WebSQL”，否则就不会有弹窗提示。使用WebSQL也比较简单，主要的方法有3个。</p><h3 id="打开数据库-opendatabase" tabindex="-1"><a class="header-anchor" href="#打开数据库-opendatabase"><span>打开数据库：openDatabase()</span></a></h3><p>我们可以使用openDatabase打开一个已经存在的数据库，也可以创建新的数据库。如果数据库已经存在了，就会直接打开；如果不存在则会创建。方法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var db = window.openDatabase(dbname, version, dbdesc, dbsize,function() {});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里openDatabase方法中一共包括了5个参数，分别为数据库名、版本号、描述、数据库大小、创建回调。其中创建回调可以缺省。</p><p>使用openDatabase方法会返回一个数据库句柄，我们可以将它保存在变量db中，方便我们后续进行使用。</p><p>如果我们想要创建一个名为wucai的数据库，版本号为1.0，数据库的描述是“王者荣耀数据库”，大小是1024*1024，创建方法为下面这样。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>var db = openDatabase(&#39;wucai&#39;, &#39;1.0&#39;, &#39;王者荣耀数据库&#39;, 1024 * 1024);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事务操作-transaction" tabindex="-1"><a class="header-anchor" href="#事务操作-transaction"><span>事务操作：transaction()</span></a></h3><p>我们使用transaction方法来对事务进行处理，执行提交或回滚操作，方法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>transaction(callback, errorCallback, successCallback);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的3个参数代表的含义如下：</p><ol><li>处理事务的回调函数（必选），在回调函数中可以执行SQL语句，会使用到ExecuteSQL方法；</li><li>执行失败时的回调函数（可选）；</li><li>执行成功时的回调函数（可选）。</li></ol><p>如果我们进行了一个事务处理，包括创建heros数据表，想要插入一条数据，方法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>db.transaction(function (tx) {</span></span>
<span class="line"><span>    tx.executeSql(&#39;CREATE TABLE IF NOT EXISTS heros (id unique, name, hp_max, mp_max, role_main)&#39;);</span></span>
<span class="line"><span>    tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10000, &amp;quot;夏侯惇&amp;quot;, 7350, 1746, &amp;quot;坦克&amp;quot;)&#39;);</span></span>
<span class="line"><span>});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里执行的事务就是一个方法，包括两条SQL语句。tx表示的是回调函数的接收参数，也就是transaction对象的引用，方便我们在方法中进行使用。</p><h3 id="sql执行-executesql" tabindex="-1"><a class="header-anchor" href="#sql执行-executesql"><span>SQL执行：executeSql()</span></a></h3><p>ExecuteSQL命令用来执行SQL语句，即增删改查。方法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>tx.executeSql(sql, [], callback, errorCallback);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里包括了4个参数，它们代表的含义如下所示：</p><ol><li>要执行的sql语句。</li><li>SQL语句中的占位符（?）所对应的参数。</li><li>执行SQL成功时的回调函数。</li><li>执行SQL失败时的回调函数。</li></ol><p>假如我们想要创建一个heros数据表，可以使用如下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>tx.executeSql(&#39;CREATE TABLE IF NOT EXISTS heros (id unique, name, hp_max, mp_max, role_main)&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>假如我们想要对刚创建的heros数据表插入一条数据，可以使用：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10000, &amp;quot;夏侯惇&amp;quot;, 7350, 1746, &amp;quot;坦克&amp;quot;)&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="在浏览器端做一个王者荣耀英雄的查询页面" tabindex="-1"><a class="header-anchor" href="#在浏览器端做一个王者荣耀英雄的查询页面"><span>在浏览器端做一个王者荣耀英雄的查询页面</span></a></h2><p>刚才我讲解了WebSQL的基本语法，现在我们就来用刚学到的东西做一个小练习：在浏览器端做一个王者荣耀英雄的创建和查询页面。</p><p>具体步骤如下：</p><ol><li>初始化数据：我们需要在HTML中设置一个id为datatable的table表格，然后在JavaScript中创建init()函数，获取id为datatable的元素。</li><li>创建showData方法：参数为查询出来的数据row，showData方法可以方便地展示查询出来的一行数据我们在数据表中的字段为id、name、hp_max、mp_max和role_main，<a href="http://xn--row-vs9d8a55ef1uckgzl3a8jv4ry.id" target="_blank" rel="noopener noreferrer">因此我们可以使用row.id</a>、<a href="http://row.name" target="_blank" rel="noopener noreferrer">row.name</a>、row.hp_max、row.mp_max和row.role_main来获取这些字段的数值，并且创建相应的标签，将这5个字段放到一个里面。</li><li>使用openDatabase方法打开数据库：这里我们定义的数据库名为wucai，版本号为1.0，数据库描述为“王者荣耀英雄数据”，大小为1024 * 1024。</li><li>使用transaction方法执行两个事务：第一个事务是创建heros数据表，并且插入5条数据。第二个事务是对heros数据表进行查询，并且对查询出来的数据行使用showData方法进行展示。</li></ol><p>完整代码如下（也可以通过<a href="(https://github.com/cystanford/WebSQL)">GitHub</a>下载）：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&amp;lt;!DOCTYPE HTML&amp;gt;</span></span>
<span class="line"><span>&amp;lt;html&amp;gt;</span></span>
<span class="line"><span>   &amp;lt;head&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;title&amp;gt;SQL必知必会&amp;lt;/title&amp;gt; </span></span>
<span class="line"><span>      &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;</span></span>
<span class="line"><span>         // 初始化</span></span>
<span class="line"><span>         function init() {</span></span>
<span class="line"><span>            datatable = document.getElementById(&amp;quot;datatable&amp;quot;);</span></span>
<span class="line"><span>         }</span></span>
<span class="line"><span>         // 显示每个英雄的数据</span></span>
<span class="line"><span>         function showData(row){</span></span>
<span class="line"><span>            var tr = document.createElement(&amp;quot;tr&amp;quot;);</span></span>
<span class="line"><span>            var td1 = document.createElement(&amp;quot;td&amp;quot;);</span></span>
<span class="line"><span>            var td2 = document.createElement(&amp;quot;td&amp;quot;);</span></span>
<span class="line"><span>            var td3 = document.createElement(&amp;quot;td&amp;quot;);</span></span>
<span class="line"><span>            var td4 = document.createElement(&amp;quot;td&amp;quot;);</span></span>
<span class="line"><span>            var td5 = document.createElement(&amp;quot;td&amp;quot;); </span></span>
<span class="line"><span>            td1.innerHTML = row.id;</span></span>
<span class="line"><span>            td2.innerHTML = row.name;</span></span>
<span class="line"><span>            td3.innerHTML = row.hp_max;</span></span>
<span class="line"><span>            td4.innerHTML = row.mp_max;</span></span>
<span class="line"><span>            td5.innerHTML = row.role_main;</span></span>
<span class="line"><span>            tr.appendChild(td1);</span></span>
<span class="line"><span>            tr.appendChild(td2);</span></span>
<span class="line"><span>            tr.appendChild(td3);</span></span>
<span class="line"><span>            tr.appendChild(td4);</span></span>
<span class="line"><span>            tr.appendChild(td5);</span></span>
<span class="line"><span>            datatable.appendChild(tr);   </span></span>
<span class="line"><span>         }</span></span>
<span class="line"><span>         // 设置数据库信息</span></span>
<span class="line"><span>         var db = openDatabase(&#39;wucai&#39;, &#39;1.0&#39;, &#39;王者荣耀英雄数据&#39;, 1024 * 1024);</span></span>
<span class="line"><span>         var msg;</span></span>
<span class="line"><span>           // 插入数据</span></span>
<span class="line"><span>         db.transaction(function (tx) {</span></span>
<span class="line"><span>            tx.executeSql(&#39;CREATE TABLE IF NOT EXISTS heros (id unique, name, hp_max, mp_max, role_main)&#39;);</span></span>
<span class="line"><span>            tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10000, &amp;quot;夏侯惇&amp;quot;, 7350, 1746, &amp;quot;坦克&amp;quot;)&#39;);</span></span>
<span class="line"><span>            tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10001, &amp;quot;钟无艳&amp;quot;, 7000, 1760, &amp;quot;战士&amp;quot;)&#39;);</span></span>
<span class="line"><span>            tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10002, &amp;quot;张飞&amp;quot;, 8341, 100, &amp;quot;坦克&amp;quot;)&#39;);</span></span>
<span class="line"><span>            tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10003, &amp;quot;牛魔&amp;quot;, 8476, 1926, &amp;quot;坦克&amp;quot;)&#39;);</span></span>
<span class="line"><span>            tx.executeSql(&#39;INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10004, &amp;quot;吕布&amp;quot;, 7344, 0, &amp;quot;战士&amp;quot;)&#39;);</span></span>
<span class="line"><span>            msg = &#39;&amp;lt;p&amp;gt;heros数据表创建成功，一共插入5条数据。&amp;lt;/p&amp;gt;&#39;;</span></span>
<span class="line"><span>            document.querySelector(&#39;#status&#39;).innerHTML =  msg;</span></span>
<span class="line"><span>         });</span></span>
<span class="line"><span>         // 查询数据</span></span>
<span class="line"><span>         db.transaction(function (tx) {</span></span>
<span class="line"><span>            tx.executeSql(&#39;SELECT * FROM heros&#39;, [], function (tx, data) {</span></span>
<span class="line"><span>               var len = data.rows.length;</span></span>
<span class="line"><span>               msg = &amp;quot;&amp;lt;p&amp;gt;查询记录条数: &amp;quot; + len + &amp;quot;&amp;lt;/p&amp;gt;&amp;quot;;</span></span>
<span class="line"><span>               document.querySelector(&#39;#status&#39;).innerHTML +=  msg;</span></span>
<span class="line"><span>                  // 将查询的英雄数据放到 datatable中</span></span>
<span class="line"><span>               for (i = 0; i &amp;lt; len; i++){</span></span>
<span class="line"><span>                  showData(data.rows.item(i));</span></span>
<span class="line"><span>               }</span></span>
<span class="line"><span>            });</span></span>
<span class="line"><span></span></span>
<span class="line"><span>         });</span></span>
<span class="line"><span>      &amp;lt;/script&amp;gt;</span></span>
<span class="line"><span>   &amp;lt;/head&amp;gt; </span></span>
<span class="line"><span>   &amp;lt;body&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;div id=&amp;quot;status&amp;quot; name=&amp;quot;status&amp;quot;&amp;gt;状态信息&amp;lt;/div&amp;gt;</span></span>
<span class="line"><span>      &amp;lt;table border=&amp;quot;1&amp;quot; id=&amp;quot;datatable&amp;quot;&amp;gt;&amp;lt;/table&amp;gt;</span></span>
<span class="line"><span>   &amp;lt;/body&amp;gt; </span></span>
<span class="line"><span>&amp;lt;/html&amp;gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>演示结果如下：</p><p><img src="https://static001.geekbang.org/resource/image/3e/33/3e7e08ea2c5d768ed0bdbd757c6b8f33.png" alt=""><br><br> 你能看到使用WebSQL来操作本地存储还是很方便的。</p><p>刚才我们讲的是创建本地存储，那么如何删除呢？你可以直接通过浏览器来删除，比如在Chrome浏览器中找到Application中的Clear storage，然后使用Clear site data即可：</p><img src="https://static001.geekbang.org/resource/image/0e/db/0eec0b6cd8a11e6e52af6595b02ac9db.png" alt=""><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>今天我讲解了如何在浏览器中通过WebSQL来操作本地存储，如果想使用SQL来管理和查询本地存储，我们可以使用WebSQL，通过三个核心的方法就可以方便让我们对数据库的连接，事务处理，以及SQL语句的执行来进行操作。我在Github上提供了操作的HTML代码，如果还没有使用过WebSQL就快来使用下吧。</p><p><img src="https://static001.geekbang.org/resource/image/df/b0/dfdfe930267465e4ec99adc4f73aefb0.png" alt=""><br><br> 我今天讲到了本地存储，在浏览器中包括了Cookies、Local Storage、Session Storage、WebSQL和IndexedDB这5种形式的本地存储，你能说下它们之间的区别么？</p><p>最后是一道动手题，请你使用WebSQL创建数据表heros，并且插入5个以上的英雄数据，字段为id、name、hp_max、mp_max、role_main。在HTML中添加一个输入框，可以输入英雄的姓名，并对该英雄的数据进行查询，如下图所示：</p><p><img src="https://static001.geekbang.org/resource/image/dc/08/dcdefa40424e4e9910dbef9dd6938d08.png" alt=""><br><br> 欢迎你在评论区写下你的答案，我会和你一起交流，也欢迎把这篇文章分享给你的朋友或者同事，与他们一起交流一下。</p>`,57)]))}const c=s(p,[["render",l]]),m=JSON.parse('{"path":"/posts/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9A%E8%AE%A4%E8%AF%86DBMS/39%E4%B8%A8WebSQL%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A8H5%E4%B8%AD%E5%AD%98%E5%82%A8%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9F.html","title":"39丨WebSQL：如何在H5中存储一个本地数据库？","lang":"zh-CN","frontmatter":{"description":"39丨WebSQL：如何在H5中存储一个本地数据库？ 上一篇文章中，我们讲到了如何在Excel中使用SQL进行查询。在Web应用中，即使不通过后端语言与数据库进行操作，在Web前端中也可以使用WebSQL。WebSQL是一种操作本地数据库的网页API接口，通过它，我们就可以操作客户端的本地存储。 今天的课程主要包括以下几方面的内容： 本地存储都有哪些，...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/interview/posts/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9A%E8%AE%A4%E8%AF%86DBMS/39%E4%B8%A8WebSQL%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A8H5%E4%B8%AD%E5%AD%98%E5%82%A8%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"39丨WebSQL：如何在H5中存储一个本地数据库？"}],["meta",{"property":"og:description","content":"39丨WebSQL：如何在H5中存储一个本地数据库？ 上一篇文章中，我们讲到了如何在Excel中使用SQL进行查询。在Web应用中，即使不通过后端语言与数据库进行操作，在Web前端中也可以使用WebSQL。WebSQL是一种操作本地数据库的网页API接口，通过它，我们就可以操作客户端的本地存储。 今天的课程主要包括以下几方面的内容： 本地存储都有哪些，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T11:19:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T11:19:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"39丨WebSQL：如何在H5中存储一个本地数据库？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-16T11:19:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755343178000,"updatedTime":1755343178000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":9.44,"words":2831},"filePathRelative":"posts/SQL必知必会/第三章：认识DBMS/39丨WebSQL：如何在H5中存储一个本地数据库？.md","localizedDate":"2025年8月16日","excerpt":"\\n<p><audio id=\\"audio\\" title=\\"39丨WebSQL：如何在H5中存储一个本地数据库？\\" controls=\\"\\" preload=\\"none\\"><source id=\\"mp3\\" src=\\"https://static001.geekbang.org/resource/audio/07/2d/076c8dbf3c6c4934fd0886ac5bf45c2d.mp3\\"></audio></p>\\n<p>上一篇文章中，我们讲到了如何在Excel中使用SQL进行查询。在Web应用中，即使不通过后端语言与数据库进行操作，在Web前端中也可以使用WebSQL。WebSQL是一种操作本地数据库的网页API接口，通过它，我们就可以操作客户端的本地存储。</p>","autoDesc":true}');export{c as comp,m as data};
