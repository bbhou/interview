import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o}from"./app-d8EKP-K0.js";const p={};function n(l,e){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="春节7天练-day-2-栈、队列和递归" tabindex="-1"><a class="header-anchor" href="#春节7天练-day-2-栈、队列和递归"><span>春节7天练 _ Day 2：栈、队列和递归</span></a></h1><p><audio id="audio" title="春节7天练 | Day 2：栈、队列和递归" controls="" preload="none"><source id="mp3" src="https://static001.geekbang.org/resource/audio/87/e6/8751a31d986f0438ab8ae88fcfa84ce6.mp3"></audio></p><p>你好，我是王争。初二好！</p><p>为了帮你巩固所学，真正掌握数据结构和算法，我整理了数据结构和算法中，必知必会的30个代码实现，分7天发布出来，供你复习巩固所用。今天是第二篇。</p><p>和昨天一样，你可以花一点时间，来完成测验。测验完成后，你可以根据结果，回到相应章节，有针对性地进行复习。</p><h2 id="关于栈、队列和递归的几个必知必会的代码实现" tabindex="-1"><a class="header-anchor" href="#关于栈、队列和递归的几个必知必会的代码实现"><span>关于栈、队列和递归的几个必知必会的代码实现</span></a></h2><h3 id="栈" tabindex="-1"><a class="header-anchor" href="#栈"><span>栈</span></a></h3><p>用数组实现一个顺序栈</p><p>用链表实现一个链式栈</p><p>编程模拟实现一个浏览器的前进、后退功能</p><h3 id="队列" tabindex="-1"><a class="header-anchor" href="#队列"><span>队列</span></a></h3><p>用数组实现一个顺序队列</p><p>用链表实现一个链式队列</p><p>实现一个循环队列</p><h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归"><span>递归</span></a></h3><p>编程实现斐波那契数列求值f(n)=f(n-1)+f(n-2)</p><p>编程实现求阶乘n!</p><p>编程实现一组数据集合的全排列</p><h2 id="对应的leetcode练习题-smallfly-整理" tabindex="-1"><a class="header-anchor" href="#对应的leetcode练习题-smallfly-整理"><span>对应的LeetCode练习题（@Smallfly 整理）</span></a></h2><h3 id="栈-1" tabindex="-1"><a class="header-anchor" href="#栈-1"><span>栈</span></a></h3><ul><li>Valid Parentheses（有效的括号）</li></ul><p>英文版：<a href="https://leetcode.com/problems/valid-parentheses/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/valid-parentheses/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/valid-parentheses/</a></p><ul><li>Longest Valid Parentheses（最长有效的括号）</li></ul><p>英文版：<a href="https://leetcode.com/problems/longest-valid-parentheses/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/longest-valid-parentheses/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/longest-valid-parentheses/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/longest-valid-parentheses/</a></p><ul><li>Evaluate Reverse Polish Notatio（逆波兰表达式求值）</li></ul><p>英文版：<a href="https://leetcode.com/problems/evaluate-reverse-polish-notation/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/evaluate-reverse-polish-notation/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/</a></p><h3 id="队列-1" tabindex="-1"><a class="header-anchor" href="#队列-1"><span>队列</span></a></h3><ul><li>Design Circular Deque（设计一个双端队列）</li></ul><p>英文版：<a href="https://leetcode.com/problems/design-circular-deque/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/design-circular-deque/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/design-circular-deque/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/design-circular-deque/</a></p><ul><li>Sliding Window Maximum（滑动窗口最大值）</li></ul><p>英文版：<a href="https://leetcode.com/problems/sliding-window-maximum/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/sliding-window-maximum/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/sliding-window-maximum/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/sliding-window-maximum/</a></p><h3 id="递归-1" tabindex="-1"><a class="header-anchor" href="#递归-1"><span>递归</span></a></h3><ul><li>Climbing Stairs（爬楼梯）</li></ul><p>英文版：<a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/climbing-stairs/</a></p><p>中文版：<a href="https://leetcode-cn.com/problems/climbing-stairs/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/climbing-stairs/</a></p><p>昨天的第一篇，是关于数组和链表的，如果你错过了，点击文末的“上一篇”，即可进入测试。</p><p>祝你取得好成绩！明天见！</p>',42)]))}const c=t(p,[["render",n]]),d=JSON.parse('{"path":"/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%8A%A0%E9%A4%90%EF%BC%9A%E6%98%A5%E8%8A%827%E5%A4%A9%E7%BB%83/%E6%98%A5%E8%8A%827%E5%A4%A9%E7%BB%83%20_%20Day%202%EF%BC%9A%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E9%80%92%E5%BD%92.html","title":"春节7天练 _ Day 2：栈、队列和递归","lang":"zh-CN","frontmatter":{"description":"春节7天练 _ Day 2：栈、队列和递归 你好，我是王争。初二好！ 为了帮你巩固所学，真正掌握数据结构和算法，我整理了数据结构和算法中，必知必会的30个代码实现，分7天发布出来，供你复习巩固所用。今天是第二篇。 和昨天一样，你可以花一点时间，来完成测验。测验完成后，你可以根据结果，回到相应章节，有针对性地进行复习。 关于栈、队列和递归的几个必知必会的...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/interview/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BE%8E/%E5%8A%A0%E9%A4%90%EF%BC%9A%E6%98%A5%E8%8A%827%E5%A4%A9%E7%BB%83/%E6%98%A5%E8%8A%827%E5%A4%A9%E7%BB%83%20_%20Day%202%EF%BC%9A%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E9%80%92%E5%BD%92.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"春节7天练 _ Day 2：栈、队列和递归"}],["meta",{"property":"og:description","content":"春节7天练 _ Day 2：栈、队列和递归 你好，我是王争。初二好！ 为了帮你巩固所学，真正掌握数据结构和算法，我整理了数据结构和算法中，必知必会的30个代码实现，分7天发布出来，供你复习巩固所用。今天是第二篇。 和昨天一样，你可以花一点时间，来完成测验。测验完成后，你可以根据结果，回到相应章节，有针对性地进行复习。 关于栈、队列和递归的几个必知必会的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-16T11:19:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-16T11:19:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"春节7天练 _ Day 2：栈、队列和递归\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-16T11:19:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755343178000,"updatedTime":1755343178000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.83,"words":548},"filePathRelative":"posts/数据结构与算法之美/加餐：春节7天练/春节7天练 _ Day 2：栈、队列和递归.md","localizedDate":"2025年8月16日","excerpt":"\\n<p><audio id=\\"audio\\" title=\\"春节7天练 | Day 2：栈、队列和递归\\" controls=\\"\\" preload=\\"none\\"><source id=\\"mp3\\" src=\\"https://static001.geekbang.org/resource/audio/87/e6/8751a31d986f0438ab8ae88fcfa84ce6.mp3\\"></audio></p>\\n<p>你好，我是王争。初二好！</p>\\n<p>为了帮你巩固所学，真正掌握数据结构和算法，我整理了数据结构和算法中，必知必会的30个代码实现，分7天发布出来，供你复习巩固所用。今天是第二篇。</p>","autoDesc":true}');export{c as comp,d as data};
